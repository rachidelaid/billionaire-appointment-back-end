---
openapi: 3.0.1
info:
  title: API V1
  version: v1
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
paths:
  "/api/appointments":
    get:
      summary: Retrieves all appointments
      tags:
      - Appointments
      security:
      - bearerAuth: []
      responses:
        '200':
          description: list of appointments
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    city:
                      type: string
                    date:
                      format: date
                    user_id:
                      type: number
                    billionaire_id:
                      type: number
                    created_at:
                      format: date-time
                    updated_at:
                      format: date-time
        '401':
          description: unauthorized request
    post:
      summary: Creates an appointment
      tags:
      - Appointments
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: appointment created
        '422':
          description: invalid request
        '401':
          description: unauthorized request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                city:
                  type: string
                date:
                  format: date
                billionaire_id:
                  type: number
                user_id:
                  type: number
              required:
              - city
              - date
              - billionaire_id
              - user_id
  "/api/appointments/{id}":
    delete:
      summary: Deletes an appointment
      tags:
      - Appointments
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: appointment deleted
        '401':
          description: unauthorized request
  "/api/billionaires":
    get:
      summary: Retrieves all billionaires
      tags:
      - Billionaires
      responses:
        '200':
          description: list of billionaires
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    title:
                      type: string
                    image:
                      type: string
                    price:
                      type: number
                      format: float
                    description:
                      type: string
                    created_at:
                      format: date-time
                    updated_at:
                      format: date-time
    post:
      summary: Creates a billionaire
      tags:
      - Billionaires
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: billionaire created
        '422':
          description: invalid request
        '401':
          description: unauthorized request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                title:
                  type: string
                image:
                  type: string
                price:
                  type: number
                  format: float
                description:
                  type: string
              required:
              - name
              - title
              - image
              - price
              - description
  "/api/billionaires/{id}":
    get:
      summary: Retrieves a billionaire
      tags:
      - Billionaires
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: a billionaire
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  title:
                    type: string
                  image:
                    type: string
                  price:
                    type: number
                    format: float
                  description:
                    type: string
                  created_at:
                    format: date-time
                  updated_at:
                    format: date-time
    delete:
      summary: Deletes a billionaire
      tags:
      - Billionaires
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: billionaire deleted
        '401':
          description: unauthorized request
  "/api/users":
    post:
      summary: Register a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user created
        '422':
          description: invalid request
        '403':
          description: forbidden request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                client_id:
                  type: string
                username:
                  type: string
                email:
                  type: string
                name:
                  type: string
                role:
                  type: string
                password:
                  type: string
              required:
              - username
              - email
              - name
              - password
  "/oauth/token":
    post:
      summary: Login a user or refresh a token
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user logedin
        '400':
          description: bad request
        '401':
          description: unauthorized request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                client_id:
                  type: string
                client_secret:
                  type: string
                grant_type:
                  type: string
                username:
                  type: string
                password:
                  type: string
              required:
              - username
              - password
              - grant_type
              - client_id
              - client_secret
  "/oauth/revoke":
    post:
      summary: Logout a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user logedout
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                client_id:
                  type: string
                client_secret:
                  type: string
                token:
                  type: string
              required:
              - token
              - client_id
              - client_secret
servers:
- url: "{defaultHost}"
  variables:
    defaultHost:
      default: http://localhost:3000
